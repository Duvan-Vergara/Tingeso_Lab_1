version: "3.8"

services:
  # Servicio de Base de Datos MySQL
  db:
    image: mysql:8.0
    restart: always
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: 1880
      MYSQL_DATABASE: dbkartingrm
      MYSQL_USER: root
      MYSQL_PASSWORD: 1880
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - backend-network

  # Frontend services
  frontend1:
    image: duvanvergara/kartingrm-frontend:latest
    networks:
      - frontend-network

  frontend2:
    image: duvanvergara/kartingrm-frontend:latest
    networks:
      - frontend-network

  frontend3:
    image: duvanvergara/kartingrm-frontend:latest
    networks:
      - frontend-network

  # Backend services
  backend1:
    image: duvanvergara/kartingrm-backend:latest
    environment:
      - DB_HOST=db
    depends_on:
      - db
    networks:
      - backend-network

  backend2:
    image: duvanvergara/kartingrm-backend:latest
    environment:
      - DB_HOST=db
    depends_on:
      - db
    networks:
      - backend-network

  backend3:
    image: duvanvergara/kartingrm-backend:latest
    environment:
      - DB_HOST=db
    depends_on:
      - db
    networks:
      - backend-network

  # Nginx for frontend load balancing
  nginx-frontend:
    image: nginx:latest
    ports:
      - "8070:80"
    volumes:
      - ./nginx-frontend.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend1
      - frontend2
      - frontend3
    networks:
      - frontend-network

  # Nginx for backend load balancing
  nginx-backend:
    image: nginx:latest
    ports:
      - "8090:8090"
    volumes:
      - ./nginx-backend.conf:/etc/nginx/nginx.conf
    depends_on:
      - backend1
      - backend2
      - backend3
    networks:
      - backend-network

networks:
  frontend-network:
  backend-network:

volumes:
  mysql_data: